properties([ parameters([
  choice( choices: ['BUILD', 'DESTROY'], description: 'Do you want to build or destroy?', name: 'OPERATION'),
  choice( choices: ['DEV', 'QA'], description: 'Select the environment', name: 'ENVIRONMENT'),
]), pipelineTriggers([]) ])

pipeline {
agent any
  stages {
      stage('Checkout code') {
          steps{
              checkout([
                $class : 'GitSCM', branches : [[name: '*/terraform']],
                userRemoteConfigs: [[url: 'https://github.com/subeeshr/refinitiv_infra.git', credentialsId: 'git_pass']]])
         }
  }
       stage ('OPERATION') {
          steps {
            withCredentials([[
            $class: "AmazonWebServicesCredentialsBinding",
            credentialsId: "aws-creds"]]) {
            sh '''#!/bin/bash
            set -euo pipefail
            export PATH=$PATH:/usr/local/bin
            if [ "${ENVIRONMENT}" == "DEV" ]; then
              ENV="dev"
              cd env-dev
            elif [ "${ENVIRONMENT}" == "QA" ]; then
            ENV="qa"
            cd env-qa
            fi
            if [ "${OPERATION}" == "BUILD" ]; then
              ACTION="Building"
              TERRAFORM_COMMAND="apply"
            elif [ "${OPERATION}" == "BUILD" ]; then
              ACTION="Destroying"
              TERRAFORM_COMMAND="destroy"
            else
              echo "ACTION not recognised"
              exit 1
            fi

            echo "$ACTION $ENV on branch Terraform"
            cd ../
            rm -fv env-${ENV}/.terraform/terraform.tfstate
            chmod 755 setup_remote_state.sh
            ./setup_remote_state.sh

            cd env-${ENV}
            terraform ${TERRAFORM_COMMAND} -no-color -auto-approve
            '''
            }
}
}
}
post {
success {
slackSend (color : '#00FF00', message : "${env.OPERATION} SUCCESSFUL : JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]' for ${env.ENVIRONMENT} (${env.BUILD_URL})")
}
failure {
  slackSend (color : '#FF0000', message : "${env.OPERATION} FAILED : JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]' for ${env.ENVIRONMENT} (${env.BUILD_URL})")
}
}
}
