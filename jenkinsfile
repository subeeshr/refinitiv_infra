properties([ parameters([
  choice( choices: ['build', 'destroy'], description: 'Do you want to build or destroy?', name: 'OPERATION'),
  choice( choices: ['DEV', 'QA'], description: 'Select the environment', name: 'ENVIRONMENT')
]), pipelineTriggers([]) ])

node{
stage('Checkout code') {
checkout([
      $class: 'GitSCM', branches: [[name: '*/terraform']],
      userRemoteConfigs: [[url: 'https://github.com/subeeshr/refinitiv_infra.git']]])
}
stage ('OPERATION') {
withCredentials([[
$class: "AmazonWebServicesCredentialsBinding",
credentialsId: "aws-creds"]]) {
sh '''#!/bin/bash
set -euo pipefail
export PATH=$PATH:/usr/local/bin
if [ "${ENVIRONMENT}" == "DEV" ]; then
  ENV="DEV"
  cd dev
elif [ "${ENVIRONMENT}" == "QA" ]; then
ENV="QA"
cd qa
fi
if [ "${OPERATION}" == "build" ]; then
  ACTION="Building"
  TERRAFORM_COMMAND="apply"
elif [ "${OPERATION}" == "destroy" ]; then
  ACTION="Destroying"
  TERRAFORM_COMMAND="destroy"
else
  echo "ACTION not recognised"
  exit 1
fi
echo "$ACTION $ENV on branch TERRAFORM"
cd $PWD
rm -fv ${ENV}/.terraform/terraform.tfstate
./setup_remote_state.sh
terraform ${TERRAFORM_COMMAND} -no-color -auto-approve
'''
}
}
}
